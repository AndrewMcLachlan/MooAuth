// This file is auto-generated by @hey-api/openapi-ts

export type Application = {
    id: number;
    logoUrl?: (string) | null;
    permissions?: Array<Permission>;
    description?: (string) | null;
    name: string;
};

export type ConnectorType = 'Entra' | 'Auth0';

export type ConnectorTypeEntry = {
    id?: number;
    name: string;
    logoUrl?: (string) | null;
};

export type CreateApplication = {
    logoUrl?: (string) | null;
    description?: (string) | null;
    name: string;
};

export type CreateEntraConnector = {
    name: string;
    config: EntraConfig;
    clientId: string;
    clientSecret: string;
    audience?: (string) | null;
};

export type CreatePermission = {
    description?: (string) | null;
    name: string;
};

export type CreateRole = {
    description?: (string) | null;
    name: string;
};

export type EntraConfig = {
    tenantId: string;
} | null;

export type EntraConnector = {
    id: number;
    config: EntraConfig;
    slug: string;
    clientId: string;
    audience?: (string) | null;
    name: string;
};

export type Permission = {
    description?: (string) | null;
    id: number;
    name: string;
};

export type Permission2 = {
    id: number;
    name: string;
};

export type ProblemDetails = {
    type?: (string) | null;
    title?: (string) | null;
    status?: (number) | null;
    detail?: (string) | null;
    instance?: (string) | null;
};

export type Role = {
    description?: (string) | null;
    permissions?: Array<Permission2>;
    id: number;
    name: string;
};

export type SimpleApplication = {
    id: number;
    name: string;
    permissions?: Array<SimplePermission>;
};

export type SimpleConnector = {
    id: number;
    name: string;
    type: ConnectorType;
    clientId: string;
};

export type SimplePermission = {
    id: number;
    name: string;
};

export type User = {
    id: unknown;
    emailAddress: string;
    firstName: string;
    lastName: string;
};

export type GetAllApplicationsResponse = (Array<Application>);

export type GetAllApplicationsError = unknown;

export type CreateApplicationData = {
    body: CreateApplication;
};

export type CreateApplicationResponse = (Application);

export type CreateApplicationError = unknown;

export type GetApplicationData = {
    path: {
        id: number;
    };
};

export type GetApplicationResponse = (Application);

export type GetApplicationError = (ProblemDetails);

export type UpdateApplicationData = {
    body: CreateApplication;
    path: {
        id: number;
    };
};

export type UpdateApplicationResponse = (Application);

export type UpdateApplicationError = (ProblemDetails);

export type DeleteApplicationData = {
    path: {
        id: number;
    };
};

export type DeleteApplicationResponse = (void);

export type DeleteApplicationError = (ProblemDetails);

export type GetPermissionListResponse = (Array<SimpleApplication>);

export type GetPermissionListError = unknown;

export type GetPermissionData = {
    path: {
        applicationId: number;
        id: number;
    };
};

export type GetPermissionResponse = (Permission);

export type GetPermissionError = (ProblemDetails);

export type UpdatePermissionData = {
    body: CreatePermission;
    path: {
        applicationId: number;
        id: number;
    };
};

export type UpdatePermissionResponse = (Permission);

export type UpdatePermissionError = (ProblemDetails);

export type DeletePermissionData = {
    path: {
        applicationId: number;
        id: number;
    };
};

export type DeletePermissionResponse = (void);

export type DeletePermissionError = (ProblemDetails);

export type CreatePermissionData = {
    body: CreatePermission;
    path: {
        applicationId: number;
    };
};

export type CreatePermissionResponse = (Permission);

export type CreatePermissionError = unknown;

export type GetAllConnectorsResponse = (Array<SimpleConnector>);

export type GetAllConnectorsError = unknown;

export type GetAvailableConnectorTypesResponse = (Array<ConnectorTypeEntry>);

export type GetAvailableConnectorTypesError = unknown;

export type DeleteConnectorData = {
    path: {
        id: number;
    };
};

export type DeleteConnectorResponse = (void);

export type DeleteConnectorError = (ProblemDetails);

export type GetEntraConnectorData = {
    path: {
        id: number;
    };
};

export type GetEntraConnectorResponse = (EntraConnector);

export type GetEntraConnectorError = (ProblemDetails);

export type UpdateEntraConnectorData = {
    body: CreateEntraConnector;
    path: {
        id: number;
    };
};

export type UpdateEntraConnectorResponse = (EntraConnector);

export type UpdateEntraConnectorError = (ProblemDetails);

export type CreateEntraConnectorData = {
    body: CreateEntraConnector;
};

export type CreateEntraConnectorResponse = (EntraConnector);

export type CreateEntraConnectorError = unknown;

export type GetAllRolesResponse = (Array<Role>);

export type GetAllRolesError = (ProblemDetails);

export type CreateRoleData = {
    body: CreateRole;
};

export type CreateRoleResponse = (Role);

export type CreateRoleError = unknown;

export type GetRoleData = {
    path: {
        id: number;
    };
};

export type GetRoleResponse = (Role);

export type GetRoleError = (ProblemDetails);

export type UpdateRoleData = {
    body: CreateRole;
    path: {
        id: number;
    };
};

export type UpdateRoleResponse = (Role);

export type UpdateRoleError = (ProblemDetails);

export type DeleteRoleData = {
    path: {
        id: number;
    };
};

export type DeleteRoleResponse = (void);

export type DeleteRoleError = (ProblemDetails);

export type AddPermissionData = {
    path: {
        permissionId: number;
        roleId: number;
    };
};

export type AddPermissionResponse = (unknown);

export type AddPermissionError = (ProblemDetails);

export type RemoveRoleData = {
    path: {
        permissionId: number;
        roleId: number;
    };
};

export type RemoveRoleResponse = (void);

export type RemoveRoleError = (ProblemDetails);

export type GetUserResponse = (User);

export type GetUserError = unknown;