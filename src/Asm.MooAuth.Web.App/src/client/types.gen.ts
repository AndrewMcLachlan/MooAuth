// This file is auto-generated by @hey-api/openapi-ts

export type Application = {
    id: number;
    logoUrl?: string | null;
    permissions?: Array<Permission>;
    description?: string | null;
    name: string;
};

export type ConnectorType = 'Entra' | 'Auth0';

export type ConnectorTypeEntry = {
    id?: number;
    name: string;
    logoUrl?: string | null;
};

export type CreateApplication = {
    logoUrl?: string | null;
    description?: string | null;
    name: string;
};

export type CreateEntraConnector = {
    name: string;
    config: EntraConfig;
    clientId: string;
    clientSecret: string;
    audience?: string | null;
};

export type CreatePermission = {
    description?: string | null;
    name: string;
};

export type CreateRole = {
    description?: string | null;
    name: string;
};

export type EntraConfig = {
    tenantId: string;
} | null;

export type EntraConnector = {
    id: number;
    config: EntraConfig;
    slug: string;
    clientId: string;
    audience?: string | null;
    name: string;
};

export type Permission = {
    description?: string | null;
    id: number;
    name: string;
};

export type Permission2 = {
    id: number;
    name: string;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
};

export type Role = {
    description?: string | null;
    permissions?: Array<Permission2>;
    id: number;
    name: string;
};

export type SimpleApplication = {
    id: number;
    name: string;
    permissions?: Array<SimplePermission>;
};

export type SimpleConnector = {
    id: number;
    name: string;
    type: ConnectorType;
    clientId: string;
};

export type SimplePermission = {
    id: number;
    name: string;
};

export type User = {
    id: unknown;
    emailAddress: string;
    firstName: string;
    lastName: string;
};

export type GetAllApplicationsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/applications';
};

export type GetAllApplicationsResponses = {
    /**
     * OK
     */
    200: Array<Application>;
};

export type GetAllApplicationsResponse = GetAllApplicationsResponses[keyof GetAllApplicationsResponses];

export type CreateApplicationData = {
    body: CreateApplication;
    path?: never;
    query?: never;
    url: '/api/applications';
};

export type CreateApplicationResponses = {
    /**
     * Created
     */
    201: Application;
};

export type CreateApplicationResponse = CreateApplicationResponses[keyof CreateApplicationResponses];

export type DeleteApplicationData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/applications/{id}';
};

export type DeleteApplicationErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type DeleteApplicationError = DeleteApplicationErrors[keyof DeleteApplicationErrors];

export type DeleteApplicationResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApplicationResponse = DeleteApplicationResponses[keyof DeleteApplicationResponses];

export type GetApplicationData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/applications/{id}';
};

export type GetApplicationErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetApplicationError = GetApplicationErrors[keyof GetApplicationErrors];

export type GetApplicationResponses = {
    /**
     * OK
     */
    200: Application;
};

export type GetApplicationResponse = GetApplicationResponses[keyof GetApplicationResponses];

export type UpdateApplicationData = {
    body: CreateApplication;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/applications/{id}';
};

export type UpdateApplicationErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateApplicationError = UpdateApplicationErrors[keyof UpdateApplicationErrors];

export type UpdateApplicationResponses = {
    /**
     * OK
     */
    200: Application;
};

export type UpdateApplicationResponse = UpdateApplicationResponses[keyof UpdateApplicationResponses];

export type GetPermissionListData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/applications/permissions';
};

export type GetPermissionListResponses = {
    /**
     * OK
     */
    200: Array<SimpleApplication>;
};

export type GetPermissionListResponse = GetPermissionListResponses[keyof GetPermissionListResponses];

export type DeletePermissionData = {
    body?: never;
    path: {
        applicationId: number;
        id: number;
    };
    query?: never;
    url: '/api/applications/{applicationId}/permissions/{id}';
};

export type DeletePermissionErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type DeletePermissionError = DeletePermissionErrors[keyof DeletePermissionErrors];

export type DeletePermissionResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeletePermissionResponse = DeletePermissionResponses[keyof DeletePermissionResponses];

export type GetPermissionData = {
    body?: never;
    path: {
        applicationId: number;
        id: number;
    };
    query?: never;
    url: '/api/applications/{applicationId}/permissions/{id}';
};

export type GetPermissionErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetPermissionError = GetPermissionErrors[keyof GetPermissionErrors];

export type GetPermissionResponses = {
    /**
     * OK
     */
    200: Permission;
};

export type GetPermissionResponse = GetPermissionResponses[keyof GetPermissionResponses];

export type UpdatePermissionData = {
    body: CreatePermission;
    path: {
        applicationId: number;
        id: number;
    };
    query?: never;
    url: '/api/applications/{applicationId}/permissions/{id}';
};

export type UpdatePermissionErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdatePermissionError = UpdatePermissionErrors[keyof UpdatePermissionErrors];

export type UpdatePermissionResponses = {
    /**
     * OK
     */
    200: Permission;
};

export type UpdatePermissionResponse = UpdatePermissionResponses[keyof UpdatePermissionResponses];

export type CreatePermissionData = {
    body: CreatePermission;
    path: {
        applicationId: number;
    };
    query?: never;
    url: '/api/applications/{applicationId}/permissions';
};

export type CreatePermissionResponses = {
    /**
     * Created
     */
    201: Permission;
};

export type CreatePermissionResponse = CreatePermissionResponses[keyof CreatePermissionResponses];

export type GetAllConnectorsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/connectors';
};

export type GetAllConnectorsResponses = {
    /**
     * OK
     */
    200: Array<SimpleConnector>;
};

export type GetAllConnectorsResponse = GetAllConnectorsResponses[keyof GetAllConnectorsResponses];

export type GetAvailableConnectorTypesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/connectors/available';
};

export type GetAvailableConnectorTypesResponses = {
    /**
     * OK
     */
    200: Array<ConnectorTypeEntry>;
};

export type GetAvailableConnectorTypesResponse = GetAvailableConnectorTypesResponses[keyof GetAvailableConnectorTypesResponses];

export type DeleteConnectorData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/connectors/{id}';
};

export type DeleteConnectorErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type DeleteConnectorError = DeleteConnectorErrors[keyof DeleteConnectorErrors];

export type DeleteConnectorResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteConnectorResponse = DeleteConnectorResponses[keyof DeleteConnectorResponses];

export type GetEntraConnectorData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/connectors/entra/{id}';
};

export type GetEntraConnectorErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetEntraConnectorError = GetEntraConnectorErrors[keyof GetEntraConnectorErrors];

export type GetEntraConnectorResponses = {
    /**
     * OK
     */
    200: EntraConnector;
};

export type GetEntraConnectorResponse = GetEntraConnectorResponses[keyof GetEntraConnectorResponses];

export type UpdateEntraConnectorData = {
    body: CreateEntraConnector;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/connectors/entra/{id}';
};

export type UpdateEntraConnectorErrors = {
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateEntraConnectorError = UpdateEntraConnectorErrors[keyof UpdateEntraConnectorErrors];

export type UpdateEntraConnectorResponses = {
    /**
     * OK
     */
    200: EntraConnector;
};

export type UpdateEntraConnectorResponse = UpdateEntraConnectorResponses[keyof UpdateEntraConnectorResponses];

export type CreateEntraConnectorData = {
    body: CreateEntraConnector;
    path?: never;
    query?: never;
    url: '/api/connectors/entra';
};

export type CreateEntraConnectorResponses = {
    /**
     * Created
     */
    201: EntraConnector;
};

export type CreateEntraConnectorResponse = CreateEntraConnectorResponses[keyof CreateEntraConnectorResponses];

export type GetAllRolesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/roles';
};

export type GetAllRolesErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetails;
};

export type GetAllRolesError = GetAllRolesErrors[keyof GetAllRolesErrors];

export type GetAllRolesResponses = {
    /**
     * OK
     */
    200: Array<Role>;
};

export type GetAllRolesResponse = GetAllRolesResponses[keyof GetAllRolesResponses];

export type CreateRoleData = {
    body: CreateRole;
    path?: never;
    query?: never;
    url: '/api/roles';
};

export type CreateRoleResponses = {
    /**
     * Created
     */
    201: Role;
};

export type CreateRoleResponse = CreateRoleResponses[keyof CreateRoleResponses];

export type DeleteRoleData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/roles/{id}';
};

export type DeleteRoleErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type DeleteRoleError = DeleteRoleErrors[keyof DeleteRoleErrors];

export type DeleteRoleResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteRoleResponse = DeleteRoleResponses[keyof DeleteRoleResponses];

export type GetRoleData = {
    body?: never;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/roles/{id}';
};

export type GetRoleErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type GetRoleError = GetRoleErrors[keyof GetRoleErrors];

export type GetRoleResponses = {
    /**
     * OK
     */
    200: Role;
};

export type GetRoleResponse = GetRoleResponses[keyof GetRoleResponses];

export type UpdateRoleData = {
    body: CreateRole;
    path: {
        id: number;
    };
    query?: never;
    url: '/api/roles/{id}';
};

export type UpdateRoleErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type UpdateRoleError = UpdateRoleErrors[keyof UpdateRoleErrors];

export type UpdateRoleResponses = {
    /**
     * OK
     */
    200: Role;
};

export type UpdateRoleResponse = UpdateRoleResponses[keyof UpdateRoleResponses];

export type RemoveRoleData = {
    body?: never;
    path: {
        roleId: number;
        permissionId: number;
    };
    query?: never;
    url: '/api/roles/{roleId}/permissions/{permissionId}';
};

export type RemoveRoleErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type RemoveRoleError = RemoveRoleErrors[keyof RemoveRoleErrors];

export type RemoveRoleResponses = {
    /**
     * No Content
     */
    204: void;
};

export type RemoveRoleResponse = RemoveRoleResponses[keyof RemoveRoleResponses];

export type AddPermissionData = {
    body?: never;
    path: {
        roleId: number;
        permissionId: number;
    };
    query?: never;
    url: '/api/roles/{roleId}/permissions/{permissionId}';
};

export type AddPermissionErrors = {
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
};

export type AddPermissionError = AddPermissionErrors[keyof AddPermissionErrors];

export type AddPermissionResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
};

export type GetUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/me';
};

export type GetUserResponses = {
    /**
     * OK
     */
    200: User;
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type ClientOptions = {
    baseUrl: 'https://localhost:7050' | 'http://localhost:5112' | (string & {});
};